pipeline {
   agent any
   
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
}

   tools {
  maven 'maven'
}

   stages {
   
       
   stage('Code Checkout') {
     steps {
      script{
     // calculate GIT lastest commit short-hash

        gitCommitHash = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
        git rev-parse --short HEAD
        shortCommitHash = gitCommitHash.take(7)
        }
        }
     }
     
     
   stage('Exicute Unit Test') {
        steps {
        sh 'mvn clean test'
        
        }
     }  
     
   stage ('SonarQube Analysis') {
      steps {
        withSonarQubeEnv('SonarQube_Server') {
        sh 'mvn sonar:sonar'
        }
      }
    }
    
    
   stage('Generate Build Artifact') {
      steps {
        sh 'mvn clean install'
        
        }
     }
   
    
   stage('Deploye to Nexus') {
  steps {

   nexusArtifactUploader artifacts: [[artifactId: 'maven-web-application', classifier: '', file: 'target/maven-web-application.war', type: 'war']], credentialsId: 'Nexus', groupId: 'com.mt', nexusUrl: 'localhost:8085', nexusVersion: 'nexus3', protocol: 'http', repository: 'Maven-Java-Project-Snapshot', version: '6.1-SNAPSHOT'
    
    }
  }
 
     stage('Prepare Docker Image') {
        steps {
        
        sh 'docker build -t sibu2272/appnew .'
      
       
        }
     }

     
}

}
